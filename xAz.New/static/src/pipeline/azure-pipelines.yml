
# https://aka.ms/yaml
# Job Windows Server 2016 Visual Studio 2017
# Steps : invoke .\psake.ps1 with TaskList "Task" and "Verbose"
# Public Test Results 'TestResult.module.xml', 'TestResults.unit.xml' and if existing 'TestResults.integration.xml', also 'CodeCoverage.xml'

trigger:
- master

variables:
  azureSubscription: "Mark"

jobs:
  - job: Build_PS_Win2016
    pool:
      vmImage: vs2017-win2016

    steps:
    - checkout: self
      persistCredentials: true

    - task: AzurePowerShell@4
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: "FilePath"
        scriptPath: .\psake.ps1
        scriptArguments: -TaskList Test -Verbose
        azurePowerShellVersion: "latestVersion"
        errorActionPreference: "continue"

    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: 'TestResults.module.xml'
        testRunTitle: 'PS_Win2016_Module'
      displayName: 'Publish Module Test Results'
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')

    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: 'TestResults.unit.xml'
        testRunTitle: 'PS_Win2016_Unit'
        failTaskOnFailedTests: true
      displayName: 'Publish Unit Test Results'
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')

    - task: PublishCodeCoverageResults@1
      inputs:
        summaryFileLocation: 'CodeCoverage.xml'
        failIfCoverageEmpty: false
      displayName: 'Publish Unit Test Code Coverage'
      condition: and(in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed'), eq(variables['System.PullRequest.IsFork'], false))

    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: 'TestResults.integration.xml'
        testRunTitle: 'PS_Win2016_Integration'
        failTaskOnFailedTests: true
      displayName: 'Publish Integration Test Results'
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')

    - task: CopyFiles@2
      inputs:
        sourceFolder: "$(Build.SourcesDirectory)"
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: $(Build.ArtifactStagingDirectory)
        artifactName: MyBuildOutputs
